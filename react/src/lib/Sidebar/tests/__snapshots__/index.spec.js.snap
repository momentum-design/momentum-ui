// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Sidebar /> should render a Sidebar 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Sidebar
    buttonProps={Object {}}
    className=""
    collapsable={false}
    expanded={true}
    isFixed={false}
    isPageLevel={false}
    theme=""
    withIcons={true}
    withToggle={false}
    withTopbar={false}
    wrapperClass=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="md-sidebar md-sidebar--global md-sidebar--indented"
        >
          <Context.Provider
            value={
              Object {
                "primary": true,
                "secondary": false,
                "setContext": [Function],
                "tertiary": false,
              }
            }
          >
            <UIDReset />
          </Context.Provider>
        </div>,
        false,
      ],
      "className": "md-sidebar__wrapper",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Context.Provider
            value={
              Object {
                "primary": true,
                "secondary": false,
                "setContext": [Function],
                "tertiary": false,
              }
            }
          >
            <UIDReset />
          </Context.Provider>,
          "className": "md-sidebar md-sidebar--global md-sidebar--indented",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <UIDReset />,
            "value": Object {
              "primary": true,
              "secondary": false,
              "setContext": [Function],
              "tertiary": false,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": null,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": null,
              "_currentValue": null,
              "_currentValue2": null,
              "_threadCount": 0,
            },
          },
        },
        "type": "div",
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="md-sidebar md-sidebar--global md-sidebar--indented"
          >
            <Context.Provider
              value={
                Object {
                  "primary": true,
                  "secondary": false,
                  "setContext": [Function],
                  "tertiary": false,
                }
              }
            >
              <UIDReset />
            </Context.Provider>
          </div>,
          false,
        ],
        "className": "md-sidebar__wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Context.Provider
              value={
                Object {
                  "primary": true,
                  "secondary": false,
                  "setContext": [Function],
                  "tertiary": false,
                }
              }
            >
              <UIDReset />
            </Context.Provider>,
            "className": "md-sidebar md-sidebar--global md-sidebar--indented",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <UIDReset />,
              "value": Object {
                "primary": true,
                "secondary": false,
                "setContext": [Function],
                "tertiary": false,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": null,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": null,
                "_currentRenderer2": null,
                "_currentValue": null,
                "_currentValue2": null,
                "_threadCount": 0,
              },
            },
          },
          "type": "div",
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
