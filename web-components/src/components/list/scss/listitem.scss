:host(:focus) {
  box-shadow: none;
  outline: none;
}

:host(md-list-item) {
  box-sizing: border-box;
  cursor: pointer;

  .md-list-item {
    box-sizing: border-box;
    color: var(--list-text-color);
    flex: 1 1 auto;
    font-size: $list-item__font-size;
    line-height: $list-item__line-height;
    min-height: $list-item__min-height;
    padding: $list-item__padding;
    position: relative;

    // Declarations before nested rules
    @include list-item;
  }

  .md-list-item--pill {
    border-radius: var(--list-border-radius-pill);
  }

  .md-list-item--rounded {
    border-radius: var(--list-border-radius-rounded);
  }
}

:host(:hover:not([disabled])) {
  .md-list-item {
    background-color: var(--list-hover-background);
    color: var(--list-hover-text-color);
  }
}

:host(:active:not([disabled])),
:host([selected]:not([disabled])) {
  .md-list-item {
    background-color: var(--list-active-background);
    color: var(--list-active-text-color);
  }
}

:host([focus-visible]) {
  .md-list-item {
    box-shadow: $list-item__focus-shadow;
  }
}

:host(:active[disabled]),
:host([disabled]) {
  .md-list-item {
    color: var(--list-disabled-text-color);
    pointer-events: none;
  }
}

@media (forced-colors: active) {
  :host([focus-visible]:not([disabled])),
  :host(:hover:not([disabled])),
  :host(:focus:not([disabled])) {
    .md-list-item {
      outline: 2px solid Highlight;
    }
  }

  :host(:active[disabled]),
  :host([disabled]) {
    .md-list-item {
      color: GrayText;
    }
  }

  :host(:active:not([disabled])),
  :host([selected]:not([disabled])) {
    .md-list-item {
      forced-color-adjust: none;
      background-color: Highlight;
      color: Canvas;
      box-shadow: none;
      border: none;
    }
  }
}
