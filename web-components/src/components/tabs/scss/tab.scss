:host {
  box-sizing: border-box;
}

:host(:focus) {
  box-shadow: none !important;
  outline: none;
}

:host([selected]) button {
  box-shadow: var(--tabs-default-active-bottom-border, $tab-active-border);
  border-radius: $tab-focus-border-radius $tab-focus-border-radius 0 0;
  color: var(--tabs-default-active, $lm-tabs-default-active-light);
  font-family: var(--brand-font-bold);
  font-weight: var(--brand-font-weight-bold);

  &:active {
    border-radius: $tab-focus-border-radius;
  }
}

:host([vertical]) button {
  text-align: left !important;
}

:host([selected][vertical]) button {
  border-radius: 0 $tab-focus-border-radius $tab-focus-border-radius 0;
  box-shadow: var(--tabs-default-active-vertical-border, $tab-active-vertical-border);

  &:active {
    border-radius: $tab-focus-border-radius;
  }
}

:host(:focus) {
  background-color: var(--tabs-default-focus-bg, $lm-tabs-default-focus-bg-light);

  button {
    outline: $tab-main-focus-border !important;
    outline-offset: rem-calc(-2);
    box-shadow: var(--tabs-default-focus-shadow, $lm-tabs-default-focus-shadow-light) !important;
  }
}

:host(:focus[selected]) {
  background: transparent;
}

:host([viewporthidden]) {
  display: none;
  height: auto !important;
  pointer-events: none;
  position: absolute;
  right: 0;
  top: 0;
  visibility: hidden;
  width: auto !important;
  z-index: -1;
}

:host([measuringrealwidth]) {
  width: auto !important;
}

.tab-slot {
  display: block;
}

slot {
  .tab-content {
    align-items: center;
    display: flex;

    md-icon,
    img {
      margin-right: 0.5rem;
    }

    img {
      height: 1rem;
      width: 1rem;
    }
  }
}

.tab-action-button {
  display: flex;
  margin-left: calc(#{$tab-base-indent} * 4);

  md-icon {
    display: inherit;
  }

  &:hover {
    cursor: pointer;
  }
}

.closable {
  display: flex;
  justify-content: space-between;
}

md-icon {
  &:focus {
    border-radius: calc(#{$tab-focus-border-radius} / 2);
    @include remove-focus;
    @include focus-boxshadow(rem-calc(1.5), var(--md-focus-border-color));
  }
}

button {
  background: $tab-none-bg;
  border: none;
  border-radius: $tab-focus-border-radius;
  color: var(--tabs-default-text-color, $lm-tabs-default-text-color-light);
  display: block;
  height: 100%;
  min-height: $tab-overflow-button-height;
  padding: $tab-button-padding;
  position: relative;
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  width: 100%;

  &:disabled {
    background: $tab-none-bg;
    color: var(--tabs-default-disabled, $lm-tabs-default-disabled-light);
    cursor: not-allowed;
    filter: invert(100%);

    @media screen and (-ms-high-contrast: active) {
      filter: brightness(1) contrast(1) saturate(1.5);
    }

    &:hover {
      background: none;
    }

    &:focus {
      outline: none !important;
      border: none !important;
    }
  }

  ::slotted(span) {
    @include tab-button-span;
  }

  span {
    @include tab-button-span;
    padding: $tab-slot-padding;
  }

  &:hover {
    background-color: var(--tabs-default-hover, $lm-tabs-default-hover-light);
  }

  &:active {
    background-color: var(--tabs-default-pressed, $lm-tabs-default-pressed-light);
    outline: none;
  }

  &:focus {
    outline: none;
  }
}

/* High Contrast Mode */
@media (forced-colors: active) {
  :host {
    background-color: Canvas;
    box-shadow: none;
  }

  :host button {
    border: none;
  }

  :host([selected]) button {
    border-radius: $tab-focus-border-radius $tab-focus-border-radius 0 0;
    color: HighlightText;
    background-color: Highlight !important;
    forced-color-adjust: none;

    &:active {
      border-radius: $tab-focus-border-radius;
    }
  }

  :host(:focus) button {
    outline: 2px solid Highlight;
    outline-offset: -2px;
    box-shadow: none;
    border: none;
  }

  :host(:focus[selected]) {
    background: Canvas;
  }

  button {
    &:hover {
      outline: 1px solid Highlight;
      outline-offset: -1px;
    }
  }

  button:focus:not(:disabled) {
    outline: 1px solid Highlight;
    outline-offset: -1px;
  }

  button:disabled {
    forced-color-adjust: none;
    background-color: none;
    color: GrayText;
  }
}
